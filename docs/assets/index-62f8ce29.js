import{_ as T,$ as m,a0 as w,a1 as v,M as F,a as M}from"./three.module-e5c57ca2.js";import{B as f}from"./index-969f7968.js";class P extends T{constructor(t){super(t)}load(t,e,n,c){const s=this,o=new m(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(h){const l=s.parse(JSON.parse(h));e&&e(l)},n,c)}parse(t){return new S(t)}}class S{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],c=_(t,e,this.data);for(let s=0,o=c.length;s<o;s++)n.push(...c[s].toShapes());return n}}function _(d,t,e){const n=Array.from(d),c=t/e.resolution,s=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*c,o=[];let h=0,l=0;for(let a=0;a<n.length;a++){const u=n[a];if(u===`
`)h=0,l-=s;else{const p=k(u,c,h,l,e);h+=p.offsetX,o.push(p.path)}}return o}function k(d,t,e,n,c){const s=c.glyphs[d]||c.glyphs["?"];if(!s){console.error('THREE.Font: character "'+d+'" does not exists in font family '+c.familyName+".");return}const o=new w;let h,l,a,u,p,x,g,y;if(s.o){const i=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,b=i.length;r<b;)switch(i[r++]){case"m":h=i[r++]*t+e,l=i[r++]*t+n,o.moveTo(h,l);break;case"l":h=i[r++]*t+e,l=i[r++]*t+n,o.lineTo(h,l);break;case"q":a=i[r++]*t+e,u=i[r++]*t+n,p=i[r++]*t+e,x=i[r++]*t+n,o.quadraticCurveTo(p,x,a,u);break;case"b":a=i[r++]*t+e,u=i[r++]*t+n,p=i[r++]*t+e,x=i[r++]*t+n,g=i[r++]*t+e,y=i[r++]*t+n,o.bezierCurveTo(p,x,g,y,a,u);break}}return{offsetX:s.ha*t,path:o}}class E extends v{constructor(t,e={}){const n=e.font;if(n===void 0)super();else{const c=n.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(c,e)}this.type="TextGeometry"}}function q(d){const{fontUrl:t,text:e,isChinese:n,textGeometryParameter:c,textMaterialParameter:s}=d;return new Promise((o,h)=>{const l=n?`${f}images/textures/fonts/Alibaba_PuHuiTi_Regular.json`:`${f}images/textures/fonts/gentilis_regular.typeface.json`;new P().load(t||l,a=>{const u=new E(e,{...c,font:a});u.center();const p=new F(s),x=new M(u,p);o(x)},()=>{console.log("Loading TextFont...")},a=>h(a))})}export{q as c};
