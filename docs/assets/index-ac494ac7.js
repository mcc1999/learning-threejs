import{a2 as T,a3 as m,a4 as w,a5 as v,M as F,a as M}from"./three.module-3817f4fc.js";import{B as f}from"./index-969f7968.js";class P extends T{constructor(t){super(t)}load(t,e,n,a){const s=this,o=new m(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(c){const l=s.parse(JSON.parse(c));e&&e(l)},n,a)}parse(t){return new S(t)}}class S{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],a=k(t,e,this.data);for(let s=0,o=a.length;s<o;s++)n.push(...a[s].toShapes());return n}}function k(d,t,e){const n=Array.from(d),a=t/e.resolution,s=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*a,o=[];let c=0,l=0;for(let h=0;h<n.length;h++){const u=n[h];if(u===`
`)c=0,l-=s;else{const p=_(u,a,c,l,e);c+=p.offsetX,o.push(p.path)}}return o}function _(d,t,e,n,a){const s=a.glyphs[d]||a.glyphs["?"];if(!s){console.error('THREE.Font: character "'+d+'" does not exists in font family '+a.familyName+".");return}const o=new w;let c,l,h,u,p,x,g,y;if(s.o){const i=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,b=i.length;r<b;)switch(i[r++]){case"m":c=i[r++]*t+e,l=i[r++]*t+n,o.moveTo(c,l);break;case"l":c=i[r++]*t+e,l=i[r++]*t+n,o.lineTo(c,l);break;case"q":h=i[r++]*t+e,u=i[r++]*t+n,p=i[r++]*t+e,x=i[r++]*t+n,o.quadraticCurveTo(p,x,h,u);break;case"b":h=i[r++]*t+e,u=i[r++]*t+n,p=i[r++]*t+e,x=i[r++]*t+n,g=i[r++]*t+e,y=i[r++]*t+n,o.bezierCurveTo(p,x,g,y,h,u);break}}return{offsetX:s.ha*t,path:o}}class E extends v{constructor(t,e={}){const n=e.font;if(n===void 0)super();else{const a=n.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(a,e)}this.type="TextGeometry"}}function q(d){const{fontUrl:t,text:e,isChinese:n,textGeometryParameter:a,textMaterialParameter:s}=d;return new Promise((o,c)=>{const l=n?`${f}images/textures/fonts/Alibaba_PuHuiTi_Regular.json`:`${f}images/textures/fonts/gentilis_regular.typeface.json`;new P().load(t||l,h=>{const u=new E(e,{...a,font:h});u.center();const p=new F(s),x=new M(u,p);o(x)},()=>{console.log("Loading TextFont...")},h=>c(h))})}export{q as c};
